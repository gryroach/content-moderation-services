version: '3.4'

services:
  nginx:
    image: nginx:latest
    container_name: ugc-nginx
    restart: always
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/sites:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - ugc-api
    networks:
      - ugc_main_network

  ugc-api:
    build:
      context: .
      dockerfile: ./ugc_api/Dockerfile
    container_name: ugc-api
    image: ugc-api-image
    restart: always
    env_file:
      - ./.env
    ports:
      - "8010:8000"
    volumes:
      - ./ugc_api/src:/app/src
    depends_on:
      mongos1:
        condition: service_started
      kafka-0:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - ugc_main_network
      - ugc_kafka_network

  ugc-api-test:
    build:
      context: .
      dockerfile: ./ugc_api/Dockerfile.test
    container_name: ugc-api-test
    image: ugc-api-test-image
    env_file:
      - ./.env
    environment:
      - SENTRY_DSN=
    volumes:
      - ./ugc_api/src:/app/src 
    networks:
      - ugc_main_network
      - ugc_kafka_network

networks:
  ugc_main_network:
    name: ugc_main_network
  ugc_kafka_network:
    name: ugc_kafka_network 
