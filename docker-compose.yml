version: '3.4'

x-mongo-defaults: &mongo-defaults
  image: mongo
  restart: always
  expose:
    - "27017"
  volumes:
    - /etc/localtime:/etc/localtime:ro
  healthcheck:
    test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
    interval: 5s
    timeout: 5s
    retries: 3
    start_period: 5s

x-mongos-defaults: &mongos-defaults
  image: mongo
  restart: always
  command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
  expose:
    - "27017"
  volumes:
    - /etc/localtime:/etc/localtime:ro
  depends_on:
    - mongocfg1
    - mongocfg2

services:
  nginx:
    image: nginx:latest
    container_name: ugc-nginx
    restart: always
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/sites:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - ugc-api

  ugc-api:
    build:
      context: .
      dockerfile: ./ugc_api/Dockerfile
    container_name: ugc-api
    image: ugc-api-image
    restart: always
    env_file:
      - ./.env
    ports:
      - "8010:8000"
    volumes:
      - ./ugc_api/src:/app/src
    depends_on:
      - mongos1

  moderator-admin:
    build:
      context: .
      dockerfile: ./manual_moderation_service/Dockerfile
    container_name: moderator_admin
    restart: always
    volumes:
      - ./manual_moderation_service/src:/app/src
    env_file:
      - ./.env
    ports:
      - "8020:8000"
    expose:
      - "8000"
    depends_on:
      moderator-db:
        condition: service_healthy

  ugc-api-test:
    build:
      context: .
      dockerfile: ./ugc_api/Dockerfile.test
    container_name: ugc-api-test
    image: ugc-api-test-image
    env_file:
      - ./.env
    environment:
      - SENTRY_DSN=
    volumes:
      - ./ugc_api/src:/app/src

  # Shard 1
  mongors1n1:
    <<: *mongo-defaults
    container_name: mongors1n1
    ports:
      - "27017:27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-shard1.js:/docker-entrypoint-initdb.d/init-shard1.js
      - mongo_data1:/data/db
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017

  mongors1n2:
    <<: *mongo-defaults
    container_name: mongors1n2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data2:/data/db
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017

  mongors1n3:
    <<: *mongo-defaults
    container_name: mongors1n3
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data3:/data/db
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017

  # Shard 2
  mongors2n1:
    <<: *mongo-defaults
    container_name: mongors2n1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-shard2.js:/docker-entrypoint-initdb.d/init-shard2.js
      - mongo_data4:/data/db
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017

  mongors2n2:
    <<: *mongo-defaults
    container_name: mongors2n2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data5:/data/db
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017

  mongors2n3:
    <<: *mongo-defaults
    container_name: mongors2n3
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongo_data6:/data/db
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017

  # Config Servers
  mongocfg1:
    <<: *mongo-defaults
    container_name: mongocfg1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-config.js:/docker-entrypoint-initdb.d/init-config.js
      - mongocfg1:/data/db
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017

  mongocfg2:
    <<: *mongo-defaults
    container_name: mongocfg2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongocfg2:/data/db
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017

  mongocfg3:
    <<: *mongo-defaults
    container_name: mongocfg3
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - mongocfg3:/data/db
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017

  # Mongos Routers
  mongos1:
    <<: *mongos-defaults
    container_name: mongos1
    ports:
      - "27019:27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-mongos.js:/docker-entrypoint-initdb.d/init-mongos.js

  mongos2:
    <<: *mongos-defaults
    container_name: mongos2
    ports:
      - 27020:27017

  moderator-db:
    image: postgres:16
    container_name: moderator_db
    restart: always
    volumes:
      - moderator_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${MODERATOR_DB_PASSWORD}
      - POSTGRES_DB=${MODERATOR_DB_NAME}
    ports:
      - "5435:5432"
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ${MODERATOR_DB_NAME}" ]
      interval: 5s
      retries: 5
      timeout: 5s

volumes:
  moderator_data:
  mongo_data1:
  mongo_data2:
  mongo_data3:
  mongo_data4:
  mongo_data5:
  mongo_data6:
  mongocfg1:
  mongocfg2:
  mongocfg3:
